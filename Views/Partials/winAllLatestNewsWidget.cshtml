@using Umbraco.Web.Models;
@inherits UmbracoTemplatePage
@{
    // Model.Content is the current page that we're on
    // AncestorsOrSelf is all of the ancestors this page has in the tree
    // (1) means: go up to level 1 and stop looking for more ancestors when you get there
    // First() gets the first ancestor found (the home page, on level 1)
    var homePage = CurrentPage.AncestorsOrSelf(1).First();
    
	dynamic topNewsItems = new DynamicPublishedContentList();
	
	// We know we only have one news overview page.   Grab the most recent entries from it
	var newsItems = homePage.Children( "umbNewsOverview" ).First().Children( "umbNewsItem" ).OrderBy("publishDate desc, createDate desc").Take(5);
	foreach( var item in newsItems )
	{
		//if( Umbraco.MemberHasAccess( item.Id, item.Path ) )
		{
			topNewsItems.Add( item );
		}
	}

	// Add the top few update notifications
	var updateNotifications = homePage.Children( "updateNotificationCollection" ).First().Children( "updateNotification" ).OrderBy("publishDate desc, createDate desc").Take(5);
	foreach( var item in updateNotifications )
	{
		topNewsItems.Add( item );
	}
	
	// Sort the aggregated list and take the top few entries
	topNewsItems = topNewsItems.OrderBy("publishDate desc, createDate desc").Take(5);
}

<h2 class="major"><span>Recent Posts</span></h2>

<!-- Archives -->
<ul class="style2">
    @foreach (var newsItem in topNewsItems)
    {
        // If the editor has not explicitly provided the "Page title" property page 
        // then just show the name of the page otherwise show the provided title
        var title = string.IsNullOrWhiteSpace(newsItem.Title) 
            ? newsItem.Name
            : newsItem.Title;

        // If the editor has not explicitly set the publishDate property then show the create date
        var dateTime = newsItem.PublishDate == default(DateTime) 
            ? newsItem.CreateDate
            : newsItem.PublishDate;

		string url = "";
        if( newsItem.HasProperty("page") )
        {
            url = newsItem.page.ToString();
            if( newsItem.page.Id == 0 )
            {
                url = "/";
            }
            else
            {
                url = Umbraco.TypedContent(newsItem.page.Id).Url;
            }
        }
        else
        {
            url = newsItem.Url;
        }
			
        <li>
            <article class="is-post-summary">
                <h3><a href="@url">@title</a></h3>
                <ul class="meta">
                    <li class="timestamp">@dateTime.ToString("f")</li>
                </ul>
            </article>
        </li>
    }
</ul>
<!-- /Archives -->
